import{Q as d}from"./QImg.acf87d96.js";import{Q as r}from"./QItemLabel.50306707.js";import{Q as h}from"./QItem.b70f6a9c.js";import{Q as u}from"./QCard.32ad5731.js";import{Q as g}from"./QPage.34252157.js";import{R as c}from"./use-router-link.c7194717.js";import{_ as f,K as _,L as i,M as n,N as s,U as e,d as a,q as p,Q as t}from"./index.ef85ccb4.js";import"./QSpinner.5cd7463a.js";import"./use-dark.563d234a.js";var b="/assets/indexpage_screenshot.6c13c1da.png";const v=_({name:"HelloWorld",components:{},setup(){}}),w=e("div",{class:"q-pa-md text-h5 text-bold"}," Making it your own",-1),y=e("div",{class:"text-subheader q-pt-sm"}," The world is your canvas ",-1),x=e("div",{class:"q-pt-sm"}," Your mission today is to get to this: ",-1),q=e("div",{class:"q-pt-sm"}," This is the basic order of tasks. ",-1),Q=e("div",{class:"q-pt-md text-subheader"}," 1. Add your own pictures, text and a button to the main screen. ",-1),k=e("div",{class:"q-pa-sm"}," The first page that is displayed when your app starts up is IndexPage.vue in the src folder. In this exercise we'll modify it. One important feature of Quasar, called hot reloading, enables any changes made to this file (when saved) to be immmediately shown. This speeds up programming a lot as you don't have to save, complile and restart the app each time. This is how the file looks in Visual Studio Code. ",-1),T={class:"q-pa-sm"},I=e("div",{class:"q-pa-sm"}," To demonstrate hot reloading, type a word such as 'Hello' before '<img' and save the file. In the web browser you should see the word appear to the left of the Quasar icon. As you will see it requires additional work to get text to appear in the right place, with the correct size and color etc. We will come to that later. ",-1),C=e("div",{class:"q-pt-md text-subheader"}," 1. Change the image. ",-1),A=e("div",{class:"q-pt-sm"},[t(" There are two places that images can be added to the project: "),e("ol",null,[e("li",null,[t(" in the "),e("b",null,"public/images"),t(` folder (referenced in Quasar as: 'src="images/img.png')`)]),e("li",null,[t(" in the "),e("b",null,"src/assets folder"),t(` (referenced in Quasar as: 'src="~assets/img.png') `)])])],-1),M=t(" As in the example above, you can put your own image in one of these folders and then change the code in the 'img' tag to display it. "),N=e("div",{class:"q-pa-sm bg-blue-2"},[e("pre",null,`<img
  alt="Quasar logo"
  src="~assets/myimage.png" <- Change this to the name of your image in the assets folder
  style="width: 200px; height: 200px" <- Change the size here
>
`)],-1),P=e("div",{class:"q-pt-md text-subheader"}," 2. Add some text ",-1),W=e("div",{class:"q-py-sm"}," We'll add some text below the image where we could put a description, label or accreditation. We add a 'div' around the text as a container to help keep it in the center of the page. The words written after 'class=' are key words Quasar recognizes to help with layout. ",-1),V=e("div",{class:"q-pa-sm bg-blue-2"},[e("pre",null,`<div class="full-width text-center">
    Quasar Image coutesy of NASA
</div>
`)],-1),$=t(" 3. Add a button "),z=e("div",{class:"q-py-sm"}," This button will allow the user to go to the new page we will create next. Note the 'q-btn' tag. This is one of the Quasar components mentioned in the introduction. There are many of them with descriptions and examples on the Quasar website. Feel free to change the color, label etc. ",-1),H=e("div",{class:"q-pa-sm bg-blue-2"},[e("pre",null,`   <div class="text-center">
     <q-btn> label="My Page" color="green" to="mypage"></q-btn>
   </div>
`)],-1),j=t(" 2. Add a new page "),B=e("div",{class:"q-pt-sm"},[t(" 1. Copy a previous page or create and save a new page (file). It can be as simple as something like this (the default Quasar 'IndexPage.vue' page). Note that the file name must have 2 or more words, like "),e("b",null,"'MyPage.vue'"),t(". This is called camel case. ")],-1),L=e("div",{class:"q-pa-sm bg-blue-2"},[e("pre",null,`<template>
  <q-p_ge class="flex flex-center">
    <img
      alt="Quasar logo"
      src="~assets/quasar-logo-vertical.svg"
      style="width: 200px; height: 200px"
    />
  </q-page>
</template>
`)],-1),R=e("div",{class:"q-pt-sm"},[t(` 2. While you have added a new page, Quasar doesn't know about it. You might think that it could be automatically detectetd but it isnt - you have to add this page to the Router. The router is a common concept for frameworks like Vue. It's job is to manage and load pages. (It took me a while to get my head around this concept so if it's confusing, don't worry.) Locate the file "routes.js" in the router folder. Copy and paste one of the 'children' (the line between {}), then rename the `),e("b",null,"path"),t(" and "),e("b",null,"page title"),t(" as below. Make sure to add a comma after the previous child. "),e("div",{class:"q-pt-sm"}," If you add a child for a page that doesn't exist you will see an error. "),t(` 'path' is the name that will appear after the "/" in the browser's address bar*. `)],-1),S=e("div",{class:"q-pa-sm bg-blue-2"},[e("pre",null,[t("{ path: '"),e("b",null,"mypage"),t("', component: () => import('pages/"),e("b",null,"MyPage.vue"),t(`') }
`)])],-1),Y=e("div",{class:"q-pt-sm"},' *You may notice the "#" in the address. Dont worry about it for now. It is the default mode and can be changed in the Quasar.conf file. ',-1),D={class:"row text-subheader q-pt-sm"},F=t(" Previous "),K=e("div",{style:{"text-align":"right"},class:"full-width"}," Next: Making it move ",-1);function O(l,o,U,E,G,J){return i(),n(g,{class:"flex-center q-pa-md"},{default:s(()=>[w,e("div",null,[a(u,{flat:"","q-card":"",class:"q-pa-md"},{default:s(()=>[y,x,a(d,{src:"images/MyAppTopPage.png",alt:"Quasar default app screen",style:{"max-width":"600px"}}),q,e("div",null,[Q,k,e("div",T,[a(d,{src:b,alt:"Index page screen in Visual Studio Code",style:{"max-width":"600px"}})]),I,C,A,M,N,P,W,V,a(r,{class:"q-pt-md text-subheader"},{default:s(()=>[$]),_:1}),z,H,a(r,{class:"q-pt-md text-subheader"},{default:s(()=>[j]),_:1}),B,L,R,S,Y]),e("div",D,[p((i(),n(h,{class:"col",clickable:"",to:"intro",onClick:o[0]||(o[0]=m=>l.link="intro")},{default:s(()=>[F]),_:1})),[[c]]),p((i(),n(h,{class:"col",clickable:"",to:"programming1",onClick:o[1]||(o[1]=m=>l.link="programming1")},{default:s(()=>[K]),_:1})),[[c]])])]),_:1})])]),_:1})}var le=f(v,[["render",O]]);export{le as default};
