import{u as l,a as c,Q as h}from"./QImg.b6b1d665.js";import{c as p,j as m,h as n,t as u,q as f,E as w,x as g,y as b,z as r,G as e,A as i,C as t,F as y,aq as v}from"./index.89637881.js";import{Q as _}from"./QPage.308ce482.js";var k=p({name:"QVideo",props:{...l,src:{type:String,required:!0},title:String,fetchpriority:{type:String,default:"auto"},loading:{type:String,default:"eager"},referrerpolicy:{type:String,default:"strict-origin-when-cross-origin"}},setup(a){const s=c(a),o=m(()=>"q-video"+(a.ratio!==void 0?" q-video--responsive":""));return()=>n("div",{class:o.value,style:s.value},[n("iframe",{src:a.src,title:a.title,fetchpriority:a.fetchpriority,loading:a.loading,referrerpolicy:a.referrerpolicy,frameborder:"0",allowfullscreen:!0})])}});const S=f({name:"BackgroundTrendsPage"}),q={class:"text-center"},J={class:"header q-pa-md text-h5"},x=e("div",{class:"text-subheader q-py-sm"}," What is Vue.js, where did it come from and why is it relevant for the future? What about the Quasar framework. Why are frameworks necessary at all? ",-1),C=e("div",{class:"q-py-sm"},[t(" While there is a lot of talk about Web 3.0 lately, the really significant changes have happened in front-end frameworks. As someone involved in 'front-end' application development for more than 30 years I can tell you that programming for users on PCs was difficult and time consuming. Before the world wide web became widely used, most professional packaged applications were written in C or C++ and were closely tied with the types of chips they were intended to run on. The promise of cross platform development lay far in the future. (Java made a good run at it but its desktop GUI libraries, first the AWT and later Swing were too little, too late.) Professional software was expensive. Shareware and freeware filled in the gaps but was of varying quality and without adequate payment mechanisms, was usually not well rewarded. One breakthrough was the game "),e("a",{href:"https://en.wikipedia.org/wiki/Myst",target:"_blank"},"Myst"),t(" that appeared in 1993. Myst, built with the ahead-of-its-time HyperCard that was available only for the Mac, had to be completely rewritten for the PC platform. ")],-1),j=e("div",{class:"q-py-sm"},[t(" An interesting aside, and one that shows how the effects can ripple far beyond the original scope, Wikipedia says that "),e("a",{href:"https://en.wikipedia.org/wiki/HyperCard",target:"_blank"},"HyperCard"),t(" influenced the design of the first web browser and Hypercard's scripting language, HyperTalk, inspired JavaScript which was developed for Netscape Navigator, the browser which kick-started the popularity of the world wide web. ")],-1),V=e("div",{class:"text-subheader q-pt-md"}," The birth and rise of JavaScript ",-1),T=e("div",{class:"q-py-sm"},[t(" Since its release in 1995 "),e("a",{href:"https://launchschool.com/books/javascript/read/introduction",target:"_blank"},"JavaScript"),t(" has been confused with Java - probably since it was renamed to compete with the fledgling language that was released by Sun Microsystems around the same time. While slowed at first by competition with Microsoft, JavaScript remained under continuous development together with improvements in web browsers. ")],-1),Q=e("div",{class:"q-py-sm"},[t(' "Meanwhile, very important developments were occurring in open-source communities not affiliated with ECMA work. In 2005, Jesse James Garrett released a white paper in which he coined the term Ajax and described a set of technologies, of which JavaScript was the backbone, to create web applications where data can be loaded in the background, avoiding the need for full page reloads. This sparked a renaissance period of JavaScript, spearheaded by open-source libraries and the communities that formed around them. Many new libraries were created, including jQuery, Prototype, Dojo Toolkit, and MooTools." '),e("a",{href:"https://en.wikipedia.org/wiki/JavaScript#Creation_at_Netscape",target:"_blank"},"Wikipedia JavaScript Creation_at_Netscape")],-1),M=e("div",{class:"text-subheader q-pt-md"}," The rise of JavaScript frameworks and web apps ",-1),A=e("div",{class:"q-py-sm"}," In 2009, Node.js was released extending JavaScript beyond the browser using Google's Chrome's V8 runtime. At the same time, web browsers gained many features previously only available on Desktop applications such as access to local files, drag and drop, etc. 30 years after the launch of HyperCard and 20 after the first web browser, finally cross platform development is possible. ",-1),I=e("div",{class:"q-py-sm"},[t(" The first major JavaScript framework, "),e("a",{href:"https://jquery.com",target:"_blank"},"JQuery"),t(", simplified website development and became very popular. JQuery allows the programmer to manipulate the Document Object Model (DOM) - which is the skeleton of the webpage. AngularJS, developed internally and released by Google in 2010 introduced data binding and then React, released by Facebook in 2013, replaced the DOM with a model generated by JavaScript (rather than one created by the browser and manipulated by JavaScript). Both "),e("a",{href:"https://www.cuelogic.com/blog/what-are-the-differences-between-angular-and-react",target:"_blank"},"Angular and React"),t(" improved the capabilities of JavaScript to interact directly with the webpage contents. These JavaScript frameworks, more advanced and efficient JIT compilers and improving capabilities of Web browsers gave rise to the web app - a hybrid of website and application that doesn't require installation but with more restricted access to user data and device functionality. ")],-1),W=e("div",{class:"q-py-sm"},[t(" As the capabilities of JavaScript increased, so did the difficulties in managing it. IDEs built for programming in other languages were not widely used for JavaScript as it could usually be written in a plain text editor. However the limitations of writing increasing lengthy code in a text file caused it to become unmanageable. Recently "),e("b",null,"Visual Studio Code"),t(" (VS Code for short) has become a standard for JavaScript development as a lightweight IDE (itself written with Electron - a platform for developing desktop applications with JavaScript). ")],-1),B=e("div",{class:"text-subheader q-pt-md"}," Vue.js ",-1),D=e("a",{href:"https://svelte.dev"}," Svelte ",-1),N=e("a",{href:"https://www.solidjs.com"},"Solid",-1),P={class:"q-py-sm"},H=e("div",{class:"text-subheader q-pt-md"}," Quasar ",-1),R={class:"q-pt-md"},E=e("a",{href:"https://quasar.dev",target:"_blank"},"Quasar framework",-1);function G(a,s,o,O,$,F){const d=w("router-link");return g(),b(_,{class:"flex-center q-pa-sm"},{default:r(()=>[e("div",q,[i(h,{style:{"max-width":"500px"},alt:"vue_quasar_nodejs",src:"images/vue_quasar_nodejs_t.png"})]),e("div",J,[t("Background and Trends "),i(y,{class:"q-ml-sm",outline:"",style:{color:"goldenrod","text-align":"right"},label:"Skip this",to:"startprogramming"})]),e("div",null,[i(v,{flat:"",class:"q-pa-md"},{default:r(()=>[x,C,j,V,T,Q,M,A,I,W,B,t(" Vue.js was developed first as an experiment to try and take the best parts of React and Angular while simplifying the code architecture. To my mind, Vue.js goes further by making Single File Components and the Model View Controller pattern central to development. You might want to look at other frameworks, including newer ones such as "),D,t(" and "),N,t(" before committing yourself to Vue.js. "),e("div",P,[t(" This video describes the early days of Vue.js and how it became popular. "),i(k,{style:{height:"380px"},src:"https://www.youtube.com/embed/OrxmtDw4pVI"})]),H,e("div",R,[t(" The "),E,t(" is a recent framework that builds on Vue.js, adding the Quasar Command Line Interface (CLI) and a library of Vue components with great documentation and many examples. Quasar makes it much easier to target other platforms allowing to build Desktop and native mobile apps using the same codebase. The last version of Vue.js is installed when you install Quasar so developing with Vue and Quasar is a great combination and makes it easy to "),i(d,{to:"/startprogramming"},{default:r(()=>[t("get started")]),_:1}),t(". ")])]),_:1})])]),_:1})}var Y=u(S,[["render",G]]);export{Y as default};
