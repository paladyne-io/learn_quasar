import{Q as m}from"./QCard.f961563c.js";import{Q as w}from"./QTable.392c7e1b.js";import{r as o,o as x,B as q,q as S,t as k,x as n,d as t,l as u,v as f,D as e,k as C,C as c,z as r}from"./index.5e050ce2.js";import{Q as y}from"./QPage.a70fc1e0.js";import"./use-dark.baa9f6ef.js";import"./QSeparator.681f582c.js";import"./use-timeout.37c7818d.js";import"./scroll.c1c7555a.js";import"./use-tick.ee5ea96c.js";import"./use-key-composition.f5ba70e5.js";import"./format.a33550d6.js";import"./uid.42677368.js";import"./QItem.78e188f6.js";import"./QItemSection.9035f46f.js";import"./QItemLabel.4dc470f0.js";import"./selection.2d7705e9.js";import"./use-form.f972d811.js";import"./use-checkbox.abfab346.js";const T=e("div",{class:"heading full-width"},"Reggie",-1),H={class:"q-pa-md"},V={class:"full-width text-center"},Q={class:"text-center q-pa-md"},D=e("div",{class:"q-pa-md"},[e("b",null,"Method:"),r(" Same as the first example, wrap the q-card in a <Transition> with 'v-show' or 'v-if' and a variable (i.e 'dogStatsVisible'). The transition is triggered when the value of the variable is changed. ")],-1),B=e("pre",null,`  <transition
    leave-active-class="animated flipOutY"
    enter-active-class="animated flipInY"
    @after-leave="imageHidden"
  >
  <q-card v-show="dogStatsVisible">
  </transition >
  `,-1),N=e("div",{class:"q-pa-md"},[e("b",null,"Issues."),r(" The flip transition doesn't reval the other card in a natural way. This can be partially fixed by 'listening' to the imageHidden or statsHidden events that are emitted when the next card is revealed, however the transition effect is still not very satisfactory. ")],-1),I={class:"q-pa-md"},Y=r(" We will try some alternative approaches in the next examples"),M=r(". "),R={class:"text-center q-pa-md full-width"},A={class:"text-center q-pa-md"},oe={__name:"MyDogAppPage2",setup(E){const a=o(!1),s=o(!0),p=o("Reggie").value+"'s stats",i=o("Show stats");x(()=>{console.log("mounted")});const h=[{name:"name",required:!0,label:"Exercise",align:"left",field:l=>l.name,format:l=>`${l}`,sortable:!0},{name:"Time",align:"left",label:"Time (m)",field:"time",sortable:!0},{name:"calories",align:"center",label:"Calories",field:"calories",sortable:!0},{name:"fat",label:"Fat (g)",field:"fat",sortable:!0}],v=[{name:"Walking",time:30,calories:159,fat:6},{name:"Running in park",time:30,calories:237,fat:9},{name:"Sleeping",time:90,calories:10,fat:1},{name:"Chasing cars",time:10,calories:200,fat:3.7},{name:"Chasing cats",time:10,calories:100,fat:8},{name:"Chasing tail",time:30,calories:50,fat:10}];function g(){console.log("imageHidden - dogStatsVisible: "+a.value),a.value=!a.value}function d(){console.log("flip"),s.value?(s.value=!1,i.value="Hide stats"):(s.value=!0,a.value=!1,i.value="Show stats")}function _(){console.log("showDogStats: "+a.value),s.value=!1,i.value="Hide stats"}return(l,O)=>{const b=q("router-link");return S(),k(y,{class:"flex flex-center column justify-start q-mt-lg"},{default:n(()=>[t(C,{"leave-active-class":"animated flipOutY","enter-active-class":"animated flipInY",onAfterLeave:g},{default:n(()=>[u(t(m,{flat:"",class:"col column"},{default:n(()=>[e("div",{class:"text-center"},[e("img",{class:"q-ma-md",alt:"Dog image",src:"images/dog.png",onClick:_}),T])]),_:1},512),[[f,s.value]])]),_:1}),u(t(m,{flat:"",class:"col column"},{default:n(()=>[e("div",H,[t(w,{dense:"",title:p,rows:v,columns:h,"row-key":"name",onClick:d})])]),_:1},512),[[f,a.value]]),e("div",V,[e("div",Q,[t(c,{label:i.value,color:"blue",onClick:d},null,8,["label"])])]),D,B,N,e("div",I,[Y,t(b,{to:"da_ui_example_3"}),M,e("div",R,[t(c,{label:"UI Example 2",color:"primary",to:"da_ui_example_3"})])]),e("div",A,[t(c,{label:"Home",color:"green",to:"/"})])]),_:1})}}};export{oe as default};
