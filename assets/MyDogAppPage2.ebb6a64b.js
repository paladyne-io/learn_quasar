import{Q as d}from"./QCard.ca82f2fe.js";import{Q as x}from"./QTable.24327630.js";import{Q as m}from"./QBtn.2602dc31.js";import{Q as S}from"./QPage.dc878fe2.js";import{r,o as k,n as q,p as C,q as i,y,d as a,k as u,v as f,z as e,j as p,u as l}from"./index.2cb900a2.js";import"./use-dark.fdf330d5.js";import"./render.89c73a8b.js";import"./QIcon.98fbb88b.js";import"./use-size.ccee50a5.js";import"./QSeparator.3e708cb0.js";import"./selection.255ff2e9.js";import"./use-router-link.c6998c77.js";import"./use-tick.d2600f28.js";import"./use-key-composition.1ebc182e.js";import"./QSpinner.bf66351e.js";import"./format.a33550d6.js";import"./uid.42677368.js";import"./QItem.87795a80.js";import"./QItemSection.828d90da.js";import"./QItemLabel.070b2558.js";import"./use-form.25ebc042.js";import"./use-checkbox.02dcda63.js";const H=e("div",{class:"heading full-width"},"Reggie",-1),T={class:"q-pa-md"},V={class:"full-width text-center"},Q={class:"text-center q-pa-md"},D=e("div",{class:"q-pa-md"},[e("b",null,"Method:"),l(" Wrap the component in a <Transition> with 'v-show' or 'v-if' and a variable (i.e 'dogStatsVisible'). The transition is triggered when the (boolean) value of the variable is changed, switching the visibility of the component. ")],-1),B=e("pre",null,`  <transition
    leave-active-class="animated flipOutY"
    enter-active-class="animated flipInY"
    @after-leave="imageHidden"
  >
  <q-card v-show="dogStatsVisible">
  </transition >
  `,-1),Y=e("div",{class:"q-pa-md"},[e("b",null,"Issues."),l(" The stats table is displayed too soon. The flip doesn't reval the other card in a natural way. Can partially fix by 'listening' to the imageHidden or statsHidden events, however the transition effect is still not resolved. ")],-1),A={class:"q-pa-md"},I=l(" We will try some alternative approaches in the next "),M=l(" examples"),N=l(". "),W={class:"text-center q-pa-md"},ce={__name:"MyDogAppPage2",setup(j){const t=r(!1),s=r(!0),o=r("Show stats");k(()=>{console.log("mounted")});const v=[{name:"name",required:!0,label:"Exercise",align:"left",field:n=>n.name,format:n=>`${n}`,sortable:!0},{name:"Time",align:"left",label:"Time (m)",field:"time",sortable:!0},{name:"calories",align:"center",label:"Calories",field:"calories",sortable:!0},{name:"fat",label:"Fat (g)",field:"fat",sortable:!0}],h=[{name:"Walking",time:30,calories:159,fat:6},{name:"Running in park",time:30,calories:237,fat:9},{name:"Sleeping",time:90,calories:10,fat:1},{name:"Chasing cars",time:10,calories:200,fat:3.7},{name:"Chasing cats",time:10,calories:100,fat:8},{name:"Chasing tail",time:30,calories:50,fat:10}];function g(){console.log("imageHidden - dogStatsVisible: "+t.value),t.value=!t.value}function _(){console.log("statsHidden - dogStatsVisible: "+t.value),s.value=!0}function c(){console.log("flip"),s.value?(s.value=!1,t.value=!0,o.value="Hide stats"):(s.value=!0,t.value=!1,o.value="Show stats")}function b(){console.log("showDogStats: "+t.value),s.value=!1,o.value="Hide stats"}return(n,L)=>{const w=y("router-link");return q(),C(S,{class:"flex flex-center column justify-start q-mt-lg"},{default:i(()=>[a(p,{"leave-active-class":"animated flipOutY","enter-active-class":"animated flipInY",onAfterLeave:g},{default:i(()=>[u(a(d,{flat:"",class:"col column"},{default:i(()=>[e("div",{class:"text-center"},[e("img",{class:"q-ma-md",alt:"Dog image",src:"images/dog.png",onClick:b}),H])]),_:1},512),[[f,s.value]])]),_:1}),a(p,{onAfterLeave:_},{default:i(()=>[u(a(d,{flat:"",class:"col column"},{default:i(()=>[e("div",T,[a(x,{dense:"",title:o.value,rows:h,columns:v,"row-key":"name",onClick:c},null,8,["title"])])]),_:1},512),[[f,t.value]])]),_:1}),e("div",V,[e("div",Q,[a(m,{label:o.value,color:"blue",onClick:c},null,8,["label"])])]),D,B,Y,e("div",A,[I,a(w,{to:"3"},{default:i(()=>[M]),_:1}),N]),e("div",W,[a(m,{label:"Home",color:"green",to:"/"})])]),_:1})}}};export{ce as default};
