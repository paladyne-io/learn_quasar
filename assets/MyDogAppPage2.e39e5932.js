import{Q as d}from"./QCard.13cb2f3e.js";import{Q as w}from"./QTable.c25c6c85.js";import{Q as u}from"./QBtn.9b2d20e3.js";import{Q as x}from"./QPage.f417f18c.js";import{r as n,o as k,n as q,p as C,q as i,y as S,d as t,k as f,v as p,z as e,j as y,u as o}from"./index.5480e6f4.js";import"./use-dark.6d11a5b9.js";import"./render.add9f20c.js";import"./QIcon.7d20778f.js";import"./use-size.51c7a12e.js";import"./QSeparator.d71aa6a4.js";import"./selection.c855b926.js";import"./use-router-link.7f9305b6.js";import"./use-tick.c00c58c6.js";import"./use-key-composition.4c3ec05d.js";import"./QSpinner.617391aa.js";import"./format.a33550d6.js";import"./uid.42677368.js";import"./QItem.d44fb6a3.js";import"./QItemSection.134e42da.js";import"./QItemLabel.7346fc74.js";import"./use-form.d1933b52.js";import"./use-checkbox.891dda3b.js";const T=e("div",{class:"heading full-width"},"Reggie",-1),H={class:"q-pa-md"},Q={class:"full-width text-center"},V={class:"text-center q-pa-md"},D=e("div",{class:"q-pa-md"},[e("b",null,"Method:"),o(" Wrap the component in a <Transition> with 'v-show' or 'v-if' and a variable (i.e 'dogStatsVisible'). The transition is triggered when the (boolean) value of the variable is changed, switching the visibility of the component. ")],-1),N=e("pre",null,`  <transition
    leave-active-class="animated flipOutY"
    enter-active-class="animated flipInY"
    @after-leave="imageHidden"
  >
  <q-card v-show="dogStatsVisible">
  </transition >
  `,-1),B=e("div",{class:"q-pa-md"},[e("b",null,"Issues."),o(" The stats table is displayed too soon. The flip doesn't reval the other card in a natural way. Can partially fix by 'listening' to the imageHidden or statsHidden events, however the transition effect is still not resolved. ")],-1),Y={class:"q-pa-md"},I=o(" We will try some alternative approaches in the next "),M=o(" examples"),R=o(". "),W={class:"text-center q-pa-md"},me={__name:"MyDogAppPage2",setup(j){const a=n(!1),s=n(!0),c=n("Reggie").value+"'s stats",r=n("Show stats");k(()=>{console.log("mounted")});const g=[{name:"name",required:!0,label:"Exercise",align:"left",field:l=>l.name,format:l=>`${l}`,sortable:!0},{name:"Time",align:"left",label:"Time (m)",field:"time",sortable:!0},{name:"calories",align:"center",label:"Calories",field:"calories",sortable:!0},{name:"fat",label:"Fat (g)",field:"fat",sortable:!0}],v=[{name:"Walking",time:30,calories:159,fat:6},{name:"Running in park",time:30,calories:237,fat:9},{name:"Sleeping",time:90,calories:10,fat:1},{name:"Chasing cars",time:10,calories:200,fat:3.7},{name:"Chasing cats",time:10,calories:100,fat:8},{name:"Chasing tail",time:30,calories:50,fat:10}];function h(){console.log("imageHidden - dogStatsVisible: "+a.value),a.value=!a.value}function m(){console.log("flip"),s.value?(s.value=!1,r.value="Hide stats"):(s.value=!0,a.value=!1,r.value="Show stats")}function _(){console.log("showDogStats: "+a.value),s.value=!1,c.value="Hide stats"}return(l,L)=>{const b=S("router-link");return q(),C(x,{class:"flex flex-center column justify-start q-mt-lg"},{default:i(()=>[t(y,{"leave-active-class":"animated flipOutY","enter-active-class":"animated flipInY",onAfterLeave:h},{default:i(()=>[f(t(d,{flat:"",class:"col column"},{default:i(()=>[e("div",{class:"text-center"},[e("img",{class:"q-ma-md",alt:"Dog image",src:"images/dog.png",onClick:_}),T])]),_:1},512),[[p,s.value]])]),_:1}),f(t(d,{flat:"",class:"col column"},{default:i(()=>[e("div",H,[t(w,{dense:"",title:c,rows:v,columns:g,"row-key":"name",onClick:m})])]),_:1},512),[[p,a.value]]),e("div",Q,[e("div",V,[t(u,{label:r.value,color:"blue",onClick:m},null,8,["label"])])]),D,N,B,e("div",Y,[I,t(b,{to:"3"},{default:i(()=>[M]),_:1}),R]),e("div",W,[t(u,{label:"Home",color:"green",to:"/"})])]),_:1})}}};export{me as default};
