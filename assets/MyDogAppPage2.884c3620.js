import{Q as m}from"./QCard.4e0c3b9c.js";import{Q as w}from"./QTable.59cd54d7.js";import{Q as d}from"./QBtn.bec21ff7.js";import{Q as x}from"./QPage.7dd74a2d.js";import{r,o as q,n as S,p as k,q as i,y as C,d as t,k as u,v as f,z as e,j as T,u as o}from"./index.a6f57cfb.js";import"./use-dark.d26e7882.js";import"./render.1c8257f7.js";import"./QIcon.d6306007.js";import"./use-size.d55f13e1.js";import"./QSeparator.a103cb98.js";import"./selection.84e6d0f2.js";import"./use-router-link.06542d9a.js";import"./use-tick.da861ffb.js";import"./use-key-composition.a40b97db.js";import"./QSpinner.7606a0cb.js";import"./format.a33550d6.js";import"./uid.42677368.js";import"./QItem.fed29b8d.js";import"./QItemSection.062ba8bb.js";import"./QItemLabel.9c09cc2f.js";import"./use-form.f7ed623b.js";import"./use-checkbox.15a5f540.js";const y=e("div",{class:"heading full-width"},"Reggie",-1),H={class:"q-pa-md"},Q={class:"full-width text-center"},V={class:"text-center q-pa-md"},D=e("div",{class:"q-pa-md"},[e("b",null,"Method:"),o(" Same as the first example, wrap the q-card in a <Transition> with 'v-show' or 'v-if' and a variable (i.e 'dogStatsVisible'). The transition is triggered when the value of the variable is changed. ")],-1),N=e("pre",null,`  <transition
    leave-active-class="animated flipOutY"
    enter-active-class="animated flipInY"
    @after-leave="imageHidden"
  >
  <q-card v-show="dogStatsVisible">
  </transition >
  `,-1),B=e("div",{class:"q-pa-md"},[e("b",null,"Issues."),o(" The stats table is displayed too soon. The flip doesn't reval the other card in a natural way. Can partially fix by 'listening' to the imageHidden or statsHidden events, however the transition effect issue is still not resolved. ")],-1),Y={class:"q-pa-md"},I=o(" We will try some alternative approaches in the "),M=o("next examples"),R=o(". "),j={class:"text-center q-pa-md"},me={__name:"MyDogAppPage2",setup(A){const a=r(!1),s=r(!0),p=r("Reggie").value+"'s stats",l=r("Show stats");q(()=>{console.log("mounted")});const g=[{name:"name",required:!0,label:"Exercise",align:"left",field:n=>n.name,format:n=>`${n}`,sortable:!0},{name:"Time",align:"left",label:"Time (m)",field:"time",sortable:!0},{name:"calories",align:"center",label:"Calories",field:"calories",sortable:!0},{name:"fat",label:"Fat (g)",field:"fat",sortable:!0}],v=[{name:"Walking",time:30,calories:159,fat:6},{name:"Running in park",time:30,calories:237,fat:9},{name:"Sleeping",time:90,calories:10,fat:1},{name:"Chasing cars",time:10,calories:200,fat:3.7},{name:"Chasing cats",time:10,calories:100,fat:8},{name:"Chasing tail",time:30,calories:50,fat:10}];function h(){console.log("imageHidden - dogStatsVisible: "+a.value),a.value=!a.value}function c(){console.log("flip"),s.value?(s.value=!1,l.value="Hide stats"):(s.value=!0,a.value=!1,l.value="Show stats")}function _(){console.log("showDogStats: "+a.value),s.value=!1,l.value="Hide stats"}return(n,O)=>{const b=C("router-link");return S(),k(x,{class:"flex flex-center column justify-start q-mt-lg"},{default:i(()=>[t(T,{"leave-active-class":"animated flipOutY","enter-active-class":"animated flipInY",onAfterLeave:h},{default:i(()=>[u(t(m,{flat:"",class:"col column"},{default:i(()=>[e("div",{class:"text-center"},[e("img",{class:"q-ma-md",alt:"Dog image",src:"images/dog.png",onClick:_}),y])]),_:1},512),[[f,s.value]])]),_:1}),u(t(m,{flat:"",class:"col column"},{default:i(()=>[e("div",H,[t(w,{dense:"",title:p,rows:v,columns:g,"row-key":"name",onClick:c})])]),_:1},512),[[f,a.value]]),e("div",Q,[e("div",V,[t(d,{label:l.value,color:"blue",onClick:c},null,8,["label"])])]),D,N,B,e("div",Y,[I,t(b,{to:"da_ui_example_3"},{default:i(()=>[M]),_:1}),R]),e("div",j,[t(d,{label:"Home",color:"green",to:"/"})])]),_:1})}}};export{me as default};
